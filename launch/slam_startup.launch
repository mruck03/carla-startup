<launch>
  <!-- CARLA connection -->
  <arg name='host' default='172.31.64.1'/>
  <arg name='port' default='2000'/>
  <arg name='timeout' default='10'/>

  <!-- Ego vehicle -->
  <arg name='role_name' default='ego_vehicle'/>
  <arg name="vehicle_filter" default='vehicle.*'/>
  <arg name="spawn_point" default=""/><!-- use comma separated format "x,y,z,roll,pitch,yaw" -->

  <!-- Map to load on startup (either a predefined CARLA town (e.g. 'Town01'), or a OpenDRIVE map file) -->
  <arg name="town" default=''/>

  <!-- Enable/disable passive mode -->
  <arg name='passive' default=''/>

  <!-- Synchronous mode-->
  <arg name='synchronous_mode_wait_for_vehicle_control_command' default='False'/>
  <arg name='fixed_delta_seconds' default='0.05'/>


  <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='town' value='$(arg town)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='passive' value='$(arg passive)'/>
    <arg name='synchronous_mode_wait_for_vehicle_control_command' value='$(arg synchronous_mode_wait_for_vehicle_control_command)'/>
    <arg name='fixed_delta_seconds' value='$(arg fixed_delta_seconds)'/>
  </include>

  <!-- the ego vehicle, that will be controlled by an agent (e.g. carla_ad_agent) -->
  <include file="$(find carla_spawn_objects)/launch/carla_example_ego_vehicle.launch">
    <arg name="objects_definition_file" value='$(find carla_spawn_objects)/config/objects.json'/>
    <arg name='role_name' value='$(arg role_name)'/>
    <arg name="spawn_point_ego_vehicle" value="$(arg spawn_point)"/>
    <arg name="spawn_sensors_only" value="false"/>
  </include>

  <include file="$(find carla_manual_control)/launch/carla_manual_control.launch">
    <arg name='role_name' value='$(arg role_name)'/>
  </include>


  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">
    <!-- Input PointCloud topic -->
    <remap from="cloud_in" to="/carla/$(arg role_name)/lidar"/>
    <remap from="scan" to="/carla/$(arg role_name)/scan"/>
    <rosparam>
        target_frame: ego_vehicle      # Transform scan to the ego vehicle frame
        transform_tolerance: 0.05      # Increase tolerance for minor TF delays (50 ms)
        min_height: 0.5            # Include lower points (ground reflections)
        max_height: 5               # Capture more lidar points near vehicle height

        angle_min: -3.14159           # Full 360° coverage (if lidar provides it)
        angle_max: 3.14159
        angle_increment: 0.004361      # Higher resolution (~0.25° increments)
        scan_time: 0.05                # Faster scan updates (adjust based on lidar frequency)
        range_min: 0.0                # Ignore very close noise
        range_max: 50.0               # Max range of CARLA lidar

        use_inf: true                 # Output 'inf' for out-of-range points
        inf_epsilon: 1.0

        use_sim_time: true            # For CARLA simulation time sync
        concurrency_level: 1          # Utilize multi-threading for smoother processing
    </rosparam>

  </node>

  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find carla-startup)/rviz/carla_config.rviz">
    <param name="use_sim_time" value="true"/>
  </node>

    
  <node name="slam_toolbox" pkg="slam_toolbox" type="async_slam_toolbox_node" output="screen">
    <!-- Remap to your point cloud topic -->
    <!-- <remap from="/scan" to="/carla/$(arg role_name)/lidar"/> -->
    <remap from="/scan" to="/carla/$(arg role_name)/scan"/>
    <rosparam command="load" file="$(find carla-startup)/config/test_config.yaml" />
  </node>

</launch>

